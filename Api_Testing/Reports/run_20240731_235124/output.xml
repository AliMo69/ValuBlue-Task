<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.9.6 on darwin)" generated="20240731 23:51:24.108" rpa="false" schemaversion="2">
<suite id="s1" name="Api Smoke Tests" source="/Users/alimostafaei/PycharmProjects/Urbanease/Communities_Service_Test/ValueBlue/Api_Testing/Tests/api_smoke_tests.robot">
<test id="s1-t1" name="Smoke Test: Retrieve Objects">
<kw name="Given the API is accessible">
<kw name="No Operation" library="BuiltIn">
<doc>Does absolutely nothing.</doc>
<status status="PASS" starttime="20240731 23:51:24.171" endtime="20240731 23:51:24.171"/>
</kw>
<status status="PASS" starttime="20240731 23:51:24.171" endtime="20240731 23:51:24.171"/>
</kw>
<kw name="When I send a GET request to retrieve objects">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20240731 23:51:24.636" level="INFO">GET Request : url=https://api.restful-api.dev/objects 
 path_url=/objects 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20240731 23:51:24.636" level="INFO">GET Response : url=https://api.restful-api.dev/objects 
 status=200, reason= 
 headers={'Date': 'Wed, 31 Jul 2024 21:51:24 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=5PveFBEwi640gZNBAvhVfgpHVSH%2BB%2FCAPRZjCmj7LlHKaQlos4Ar%2B4vKDcqZDmjN7SpcbZVrAYZDAhILXzoLvZcgOCpc59iFpi3WdpYm5Vc30P8nmJg5bJdQkf7iWkMRhq57RyN7qTmRCUX%2BZP%2BQuQBc"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '8ac0cf40cb8b6637-AMS', 'Content-Encoding': 'br', 'alt-svc': 'h3=":443"; ma=86400'} 
 body=[{"id":"1","name":"Google Pixel 6 Pro","data":{"color":"Cloudy White","capacity":"128 GB"}},{"id":"2","name":"Apple iPhone 12 Mini, 256GB, Blue","data":null},{"id":"3","name":"Apple iPhone 12 Pro Max","data":{"color":"Cloudy White","capacity GB":512}},{"id":"4","name":"Apple iPhone 11, 64GB","data":{"price":389.99,"color":"Purple"}},{"id":"5","name":"Samsung Galaxy Z Fold2","data":{"price":689.99,"color":"Brown"}},{"id":"6","name":"Apple AirPods","data":{"generation":"3rd","price":120}},{"id":"7","name":"Apple MacBook Pro 16","data":{"year":2019,"price":1849.99,"CPU model":"Intel Core i9","Hard disk size":"1 TB"}},{"id":"8","name":"Apple Watch Series 8","data":{"Strap Colour":"Elderberry","Case Size":"41mm"}},{"id":"9","name":"Beats Studio3 Wireless","data":{"Color":"Red","Description":"High-performance wireless noise cancelling headphones"}},{"id":"10","name":"Apple iPad Mini 5th Gen","data":{"Capacity":"64 GB","Screen size":7.9}},{"id":"11","name":"Apple iPad Mini 5th Gen","data":{"Capacity":"254 GB","Screen size":7.9}},{"id":"12","name":"Apple iPad Air","data":{"Generation":"4th","Price":"419.99","Capacity":"64 GB"}},{"id":"13","name":"Apple iPad Air","data":{"Generation":"4th","Price":"519.99","Capacity":"256 GB"}}] 
 </msg>
<msg timestamp="20240731 23:51:24.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240731 23:51:24.171" endtime="20240731 23:51:24.636"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240731 23:51:24.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240731 23:51:24.637" endtime="20240731 23:51:24.637"/>
</kw>
<status status="PASS" starttime="20240731 23:51:24.171" endtime="20240731 23:51:24.637"/>
</kw>
<kw name="Then the response status code should be 200">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20240731 23:51:24.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20240731 23:51:24.638" endtime="20240731 23:51:24.639"/>
</kw>
<status status="PASS" starttime="20240731 23:51:24.637" endtime="20240731 23:51:24.639"/>
</kw>
<kw name="And the first object should have the correct structure">
<kw name="Set Variable" library="BuiltIn">
<var>${first_object}</var>
<arg>${response.json()}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240731 23:51:24.640" level="INFO">${first_object} = {'id': '1', 'name': 'Google Pixel 6 Pro', 'data': {'color': 'Cloudy White', 'capacity': '128 GB'}}</msg>
<status status="PASS" starttime="20240731 23:51:24.639" endtime="20240731 23:51:24.640"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${first_object}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240731 23:51:24.640" endtime="20240731 23:51:24.640"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${first_object}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240731 23:51:24.640" endtime="20240731 23:51:24.640"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${first_object}</arg>
<arg>data</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240731 23:51:24.640" endtime="20240731 23:51:24.641"/>
</kw>
<status status="PASS" starttime="20240731 23:51:24.639" endtime="20240731 23:51:24.641"/>
</kw>
<doc>Quick test to verify the GET /objects endpoint</doc>
<status status="PASS" starttime="20240731 23:51:24.171" endtime="20240731 23:51:24.641"/>
</test>
<test id="s1-t2" name="Smoke Test: Create New Object">
<kw name="Given the API is accessible">
<kw name="No Operation" library="BuiltIn">
<doc>Does absolutely nothing.</doc>
<status status="PASS" starttime="20240731 23:51:24.642" endtime="20240731 23:51:24.642"/>
</kw>
<status status="PASS" starttime="20240731 23:51:24.642" endtime="20240731 23:51:24.642"/>
</kw>
<kw name="When I send a POST request to create a new object">
<kw name="Create Dictionary" library="BuiltIn">
<var>${nested_data}</var>
<arg>year= 2019</arg>
<arg>price= 1849.99</arg>
<arg>CPU model=Intel Core i9</arg>
<arg>Hard disk size= 1 TB</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240731 23:51:24.643" level="INFO">${nested_data} = {'year': ' 2019', 'price': ' 1849.99', 'CPU model': 'Intel Core i9', 'Hard disk size': ' 1 TB'}</msg>
<status status="PASS" starttime="20240731 23:51:24.642" endtime="20240731 23:51:24.643"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${data}</var>
<arg>name=Apple MacBook Pro 16</arg>
<arg>data=${nested_data}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240731 23:51:24.643" level="INFO">${data} = {'name': 'Apple MacBook Pro 16', 'data': {'year': ' 2019', 'price': ' 1849.99', 'CPU model': 'Intel Core i9', 'Hard disk size': ' 1 TB'}}</msg>
<status status="PASS" starttime="20240731 23:51:24.643" endtime="20240731 23:51:24.643"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240731 23:51:24.643" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20240731 23:51:24.643" endtime="20240731 23:51:24.643"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}</arg>
<arg>json=${data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20240731 23:51:25.553" level="INFO">POST Request : url=https://api.restful-api.dev/objects 
 path_url=/objects 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '137'} 
 body=b'{"name": "Apple MacBook Pro 16", "data": {"year": " 2019", "price": " 1849.99", "CPU model": "Intel Core i9", "Hard disk size": " 1 TB"}}' 
 </msg>
<msg timestamp="20240731 23:51:25.553" level="INFO">POST Response : url=https://api.restful-api.dev/objects 
 status=200, reason= 
 headers={'Date': 'Wed, 31 Jul 2024 21:51:25 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=KzO1rloYsBCLb3kC%2FCGFL9s%2Fg24I1UoiqPi5cr%2FW7fkW2zCsmWQTXyXlQ42sEA9mY1Vdm1OnsfdAph9GRu6Y958XPoI22N60jcA4aqeiLa3QhTqolbrknERwdbi%2BWQBsjQ4pFX6PrT1NBmgd2qah5oLq"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '8ac0cf43bc9a9725-AMS', 'Content-Encoding': 'br', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"id":"ff8081819108ddef01910ac6c8f50452","name":"Apple MacBook Pro 16","createdAt":"2024-07-31T21:51:25.429+00:00","data":{"year":" 2019","price":" 1849.99","CPU model":"Intel Core i9","Hard disk size":" 1 TB"}} 
 </msg>
<msg timestamp="20240731 23:51:25.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240731 23:51:24.643" endtime="20240731 23:51:25.554"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240731 23:51:25.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240731 23:51:25.554" endtime="20240731 23:51:25.555"/>
</kw>
<status status="PASS" starttime="20240731 23:51:24.642" endtime="20240731 23:51:25.556"/>
</kw>
<kw name="Then the response status code should be 200">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20240731 23:51:25.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20240731 23:51:25.556" endtime="20240731 23:51:25.557"/>
</kw>
<status status="PASS" starttime="20240731 23:51:25.556" endtime="20240731 23:51:25.558"/>
</kw>
<kw name="And the response should contain the created object details">
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240731 23:51:25.559" level="INFO">${json_response} = {'id': 'ff8081819108ddef01910ac6c8f50452', 'name': 'Apple MacBook Pro 16', 'createdAt': '2024-07-31T21:51:25.429+00:00', 'data': {'year': ' 2019', 'price': ' 1849.99', 'CPU model': 'Intel Core i9', 'H...</msg>
<status status="PASS" starttime="20240731 23:51:25.558" endtime="20240731 23:51:25.559"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240731 23:51:25.559" endtime="20240731 23:51:25.559"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240731 23:51:25.559" endtime="20240731 23:51:25.560"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>createdAt</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240731 23:51:25.560" endtime="20240731 23:51:25.560"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>data</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240731 23:51:25.560" endtime="20240731 23:51:25.560"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json_response}[name]</arg>
<arg>Apple MacBook Pro 16</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240731 23:51:25.560" endtime="20240731 23:51:25.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json_response}[data][year]</arg>
<arg>2019</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20240731 23:51:25.561" endtime="20240731 23:51:25.561"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${json_response}[data][price]</arg>
<arg>1849.99</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="PASS" starttime="20240731 23:51:25.561" endtime="20240731 23:51:25.561"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json_response}[data][CPU model]</arg>
<arg>Intel Core i9</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240731 23:51:25.561" endtime="20240731 23:51:25.561"/>
</kw>
<status status="PASS" starttime="20240731 23:51:25.558" endtime="20240731 23:51:25.561"/>
</kw>
<doc>Quick test to verify creating a new object</doc>
<status status="PASS" starttime="20240731 23:51:24.641" endtime="20240731 23:51:25.562"/>
</test>
<test id="s1-t3" name="Smoke Test: Update Existing Object">
<kw name="Given the API is accessible">
<kw name="No Operation" library="BuiltIn">
<doc>Does absolutely nothing.</doc>
<status status="PASS" starttime="20240731 23:51:25.563" endtime="20240731 23:51:25.563"/>
</kw>
<status status="PASS" starttime="20240731 23:51:25.563" endtime="20240731 23:51:25.563"/>
</kw>
<kw name="When I send a PUT request to update an existing object">
<kw name="Create Dictionary" library="BuiltIn">
<var>${nested_data}</var>
<arg>year= 2019</arg>
<arg>price= 2049.99</arg>
<arg>CPU model=Intel Core i9</arg>
<arg>Hard disk size= 1 TB</arg>
<arg>color=silver</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240731 23:51:25.564" level="INFO">${nested_data} = {'year': ' 2019', 'price': ' 2049.99', 'CPU model': 'Intel Core i9', 'Hard disk size': ' 1 TB', 'color': 'silver'}</msg>
<status status="PASS" starttime="20240731 23:51:25.564" endtime="20240731 23:51:25.564"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${data}</var>
<arg>name=Apple MacBook Pro 16</arg>
<arg>data=${nested_data}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240731 23:51:25.564" level="INFO">${data} = {'name': 'Apple MacBook Pro 16', 'data': {'year': ' 2019', 'price': ' 2049.99', 'CPU model': 'Intel Core i9', 'Hard disk size': ' 1 TB', 'color': 'silver'}}</msg>
<status status="PASS" starttime="20240731 23:51:25.564" endtime="20240731 23:51:25.564"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20240731 23:51:25.565" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20240731 23:51:25.565" endtime="20240731 23:51:25.565"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${object_id}</var>
<arg>ff8081819108ddef01910aa9145f041c</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240731 23:51:25.565" level="INFO">${object_id} = ff8081819108ddef01910aa9145f041c</msg>
<status status="PASS" starttime="20240731 23:51:25.565" endtime="20240731 23:51:25.566"/>
</kw>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/${object_id}</arg>
<arg>json=${data}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20240731 23:51:26.539" level="INFO">PUT Request : url=https://api.restful-api.dev/objects/ff8081819108ddef01910aa9145f041c 
 path_url=/objects/ff8081819108ddef01910aa9145f041c 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '156'} 
 body=b'{"name": "Apple MacBook Pro 16", "data": {"year": " 2019", "price": " 2049.99", "CPU model": "Intel Core i9", "Hard disk size": " 1 TB", "color": "silver"}}' 
 </msg>
<msg timestamp="20240731 23:51:26.539" level="INFO">PUT Response : url=https://api.restful-api.dev/objects/ff8081819108ddef01910aa9145f041c 
 status=200, reason= 
 headers={'Date': 'Wed, 31 Jul 2024 21:51:26 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'CF-Cache-Status': 'DYNAMIC', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=AtFqkrLC7ySUzXB56ou1mDgv248mMT%2F8bXz2k%2BF4DYcXQCF8T3hCyVL%2FjHcQoK%2BR1h1Eve51TqrqJMvqe%2BgCdcnSwGYzHeuK%2Frl6AKMVE2fZo%2F6TlB3ij%2FbamRtHLgU%2F5Gadin2BvRNImB29SoCvcnzs"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '8ac0cf498e91d0b5-AMS', 'Content-Encoding': 'br', 'alt-svc': 'h3=":443"; ma=86400'} 
 body={"id":"ff8081819108ddef01910aa9145f041c","name":"Apple MacBook Pro 16","updatedAt":"2024-07-31T21:51:26.415+00:00","data":{"year":" 2019","price":" 2049.99","CPU model":"Intel Core i9","Hard disk size":" 1 TB","color":"silver"}} 
 </msg>
<msg timestamp="20240731 23:51:26.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240731 23:51:25.566" endtime="20240731 23:51:26.542"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20240731 23:51:26.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20240731 23:51:26.542" endtime="20240731 23:51:26.543"/>
</kw>
<status status="PASS" starttime="20240731 23:51:25.563" endtime="20240731 23:51:26.543"/>
</kw>
<kw name="Then the response status code should be 200">
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20240731 23:51:26.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20240731 23:51:26.544" endtime="20240731 23:51:26.545"/>
</kw>
<status status="PASS" starttime="20240731 23:51:26.544" endtime="20240731 23:51:26.545"/>
</kw>
<kw name="And the response should contain the updated object details">
<kw name="Set Variable" library="BuiltIn">
<var>${json_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240731 23:51:26.547" level="INFO">${json_response} = {'id': 'ff8081819108ddef01910aa9145f041c', 'name': 'Apple MacBook Pro 16', 'updatedAt': '2024-07-31T21:51:26.415+00:00', 'data': {'year': ' 2019', 'price': ' 2049.99', 'CPU model': 'Intel Core i9', 'H...</msg>
<status status="PASS" starttime="20240731 23:51:26.546" endtime="20240731 23:51:26.547"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240731 23:51:26.547" endtime="20240731 23:51:26.547"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240731 23:51:26.547" endtime="20240731 23:51:26.547"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>updatedAt</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240731 23:51:26.548" endtime="20240731 23:51:26.548"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${json_response}</arg>
<arg>data</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20240731 23:51:26.548" endtime="20240731 23:51:26.548"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json_response}[name]</arg>
<arg>Apple MacBook Pro 16</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240731 23:51:26.548" endtime="20240731 23:51:26.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${json_response}[data][year]</arg>
<arg>2019</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20240731 23:51:26.549" endtime="20240731 23:51:26.549"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${json_response}[data][price]</arg>
<arg>2049.99</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="PASS" starttime="20240731 23:51:26.549" endtime="20240731 23:51:26.549"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json_response}[data][CPU model]</arg>
<arg>Intel Core i9</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240731 23:51:26.549" endtime="20240731 23:51:26.550"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${json_response}[data][color]</arg>
<arg>silver</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20240731 23:51:26.550" endtime="20240731 23:51:26.550"/>
</kw>
<status status="PASS" starttime="20240731 23:51:26.546" endtime="20240731 23:51:26.550"/>
</kw>
<doc>Quick test to verify updating an existing object</doc>
<status status="PASS" starttime="20240731 23:51:25.562" endtime="20240731 23:51:26.550"/>
</test>
<test id="s1-t4" name="Smoke Test: Delete Existing Object">
<kw name="Given the API is accessible">
<kw name="No Operation" library="BuiltIn">
<doc>Does absolutely nothing.</doc>
<status status="PASS" starttime="20240731 23:51:26.551" endtime="20240731 23:51:26.551"/>
</kw>
<status status="PASS" starttime="20240731 23:51:26.551" endtime="20240731 23:51:26.551"/>
</kw>
<kw name="And I send a POST request to create a new object">
<msg timestamp="20240731 23:51:26.553" level="FAIL">No keyword with name 'And I send a POST request to create a new object' found. Did you mean:
    When I Send A POST Request To Create A New Object</msg>
<status status="FAIL" starttime="20240731 23:51:26.553" endtime="20240731 23:51:26.553"/>
</kw>
<kw name="When I send a DELETE request to delete an existing object">
<status status="NOT RUN" starttime="20240731 23:51:26.554" endtime="20240731 23:51:26.554"/>
</kw>
<kw name="Then the response status code should be 200">
<status status="NOT RUN" starttime="20240731 23:51:26.554" endtime="20240731 23:51:26.554"/>
</kw>
<kw name="And the response should confirm the deletion">
<status status="NOT RUN" starttime="20240731 23:51:26.554" endtime="20240731 23:51:26.554"/>
</kw>
<doc>Quick test to verify deleting an existing object</doc>
<status status="FAIL" starttime="20240731 23:51:26.550" endtime="20240731 23:51:26.554">No keyword with name 'And I send a POST request to create a new object' found. Did you mean:
    When I Send A POST Request To Create A New Object</status>
</test>
<status status="FAIL" starttime="20240731 23:51:24.110" endtime="20240731 23:51:26.555"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="1" skip="0" id="s1" name="Api Smoke Tests">Api Smoke Tests</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20240731 23:51:24.171" level="ERROR">Error in file '/Users/alimostafaei/PycharmProjects/Urbanease/Communities_Service_Test/ValueBlue/Api_Testing/Tests/api_smoke_tests.robot' on line 44: Resource file 'Variables.robot' does not exist.</msg>
</errors>
</robot>
